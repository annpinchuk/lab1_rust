//Pinchuk Anna TI-81 | Variant 14
use rand;

// ----------------------------------------------------------------------------
// Task #1
// ----------------------------------------------------------------------------
// Задание: 179(б) (стр. 35)
// Даны натуральные числа n, qi,...,qn. Найти те члены qi последовательности qi,...,qn, которые
// б) при делении на 7 дают остаток 1, 2 или 5;
fn task1(n: usize, arr: &[i32]) {
    for i in 0..n {
        if arr[i] % 7 == 1 || arr[i] % 7 == 2 || arr[i] % 7 == 5 {
            print!("{} ", arr[i]);
        }
    }
    println!();
}

// ----------------------------------------------------------------------------
// Task #2
// ----------------------------------------------------------------------------
// Задание: 281 (стр. 49)
// Даны действительные числа a_1,...,a_28, b_1,...,b_28. Члены последовательности с_1,...,с_29
// связаны с членами данных последовательностей соотношениями c_29 = 0,
// c_29-i = a_29-i/(b_29-i - c_29-i+1) (i =1,...,28). Получить с_1,...,с_29
fn task2(a: &[f32], b: &[f32]) {
    let mut c: Vec<f32> = (0u8..29u8).map(f32::from).rev().collect();

    for i in 1..29 {
        c[29 - i - 1] = a[29 - i - 1] / (b[29 - i - 1] - c[29 - i - 1 + 1]);
    }

    println!("{:?}", c);
}

// ----------------------------------------------------------------------------
// Task #3
// ----------------------------------------------------------------------------
// Задание: 275 (стр. 48)
// Даны действительные числа x_1,...,x_10, y_1,...,y_10. Получить сумму (i = 1..10) x_i*y_i.
// Как упростить решение, если исходные данные будут иметь следующий порядок: x_1,y_1,..,x_10,y_10?
fn task3(x: &[f32], y: &[f32]) -> f32 {
    x.iter().enumerate().map(|(i, x_i)| x_i * y[i]).sum()
}


// ----------------------------------------------------------------------------
// Task #4
// ----------------------------------------------------------------------------
// Задание: 200 (стр. 37)
// Даны целые числа а, n, x_i, ..., x_n (n>0).
// Определить, каким по счету идет в последовательности х_1,...,x_n член, равный а.
// Еслй такого члена нет, то ответом должно быть число 0.
fn task4(a: i32, n: usize, x: &[i32]) -> usize {
    assert!(n > 0);
    return x.iter().position(|&el| el == a).unwrap_or(0);
}


fn main() {
    let arr = [12, 5, 10, 19, 8, 17, 16];
    println!("The result of task1: ");
    task1(arr.len(), &arr);

    let a: [f32; 28] = rand::random();
    let b: [f32; 28] = rand::random();
    println!("The result of task2: ");
    task2(&a, &b);

    let arr1 = [1.5, 5.0, 2.5, 2.1];
    let arr2 = [2.0, 1.2, 2.0, 3.1];
    println!("The result of task3: {}", task3(&arr1, &arr2));

    println!("The result of task4: {}",task4(5, arr.len(), &arr))
}
